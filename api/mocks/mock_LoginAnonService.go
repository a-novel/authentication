// Code generated by mockery v2.52.2. DO NOT EDIT.

package apimocks

import (
	context "github.com/a-novel-kit/context"
	mock "github.com/stretchr/testify/mock"
)

// MockLoginAnonService is an autogenerated mock type for the LoginAnonService type
type MockLoginAnonService struct {
	mock.Mock
}

type MockLoginAnonService_Expecter struct {
	mock *mock.Mock
}

func (_m *MockLoginAnonService) EXPECT() *MockLoginAnonService_Expecter {
	return &MockLoginAnonService_Expecter{mock: &_m.Mock}
}

// LoginAnon provides a mock function with given fields: ctx
func (_m *MockLoginAnonService) LoginAnon(ctx context.Context) (string, error) {
	ret := _m.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for LoginAnon")
	}

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context) (string, error)); ok {
		return rf(ctx)
	}
	if rf, ok := ret.Get(0).(func(context.Context) string); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockLoginAnonService_LoginAnon_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'LoginAnon'
type MockLoginAnonService_LoginAnon_Call struct {
	*mock.Call
}

// LoginAnon is a helper method to define mock.On call
//   - ctx context.Context
func (_e *MockLoginAnonService_Expecter) LoginAnon(ctx interface{}) *MockLoginAnonService_LoginAnon_Call {
	return &MockLoginAnonService_LoginAnon_Call{Call: _e.mock.On("LoginAnon", ctx)}
}

func (_c *MockLoginAnonService_LoginAnon_Call) Run(run func(ctx context.Context)) *MockLoginAnonService_LoginAnon_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context))
	})
	return _c
}

func (_c *MockLoginAnonService_LoginAnon_Call) Return(_a0 string, _a1 error) *MockLoginAnonService_LoginAnon_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockLoginAnonService_LoginAnon_Call) RunAndReturn(run func(context.Context) (string, error)) *MockLoginAnonService_LoginAnon_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockLoginAnonService creates a new instance of MockLoginAnonService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockLoginAnonService(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockLoginAnonService {
	mock := &MockLoginAnonService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
