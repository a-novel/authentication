// Code generated by mockery v2.52.2. DO NOT EDIT.

package servicesmocks

import (
	context "github.com/a-novel-kit/context"
	mock "github.com/stretchr/testify/mock"
)

// MockEmailExistsSource is an autogenerated mock type for the EmailExistsSource type
type MockEmailExistsSource struct {
	mock.Mock
}

type MockEmailExistsSource_Expecter struct {
	mock *mock.Mock
}

func (_m *MockEmailExistsSource) EXPECT() *MockEmailExistsSource_Expecter {
	return &MockEmailExistsSource_Expecter{mock: &_m.Mock}
}

// ExistsCredentialsEmail provides a mock function with given fields: ctx, email
func (_m *MockEmailExistsSource) ExistsCredentialsEmail(ctx context.Context, email string) (bool, error) {
	ret := _m.Called(ctx, email)

	if len(ret) == 0 {
		panic("no return value specified for ExistsCredentialsEmail")
	}

	var r0 bool
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string) (bool, error)); ok {
		return rf(ctx, email)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string) bool); ok {
		r0 = rf(ctx, email)
	} else {
		r0 = ret.Get(0).(bool)
	}

	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, email)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockEmailExistsSource_ExistsCredentialsEmail_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ExistsCredentialsEmail'
type MockEmailExistsSource_ExistsCredentialsEmail_Call struct {
	*mock.Call
}

// ExistsCredentialsEmail is a helper method to define mock.On call
//   - ctx context.Context
//   - email string
func (_e *MockEmailExistsSource_Expecter) ExistsCredentialsEmail(ctx interface{}, email interface{}) *MockEmailExistsSource_ExistsCredentialsEmail_Call {
	return &MockEmailExistsSource_ExistsCredentialsEmail_Call{Call: _e.mock.On("ExistsCredentialsEmail", ctx, email)}
}

func (_c *MockEmailExistsSource_ExistsCredentialsEmail_Call) Run(run func(ctx context.Context, email string)) *MockEmailExistsSource_ExistsCredentialsEmail_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string))
	})
	return _c
}

func (_c *MockEmailExistsSource_ExistsCredentialsEmail_Call) Return(_a0 bool, _a1 error) *MockEmailExistsSource_ExistsCredentialsEmail_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockEmailExistsSource_ExistsCredentialsEmail_Call) RunAndReturn(run func(context.Context, string) (bool, error)) *MockEmailExistsSource_ExistsCredentialsEmail_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockEmailExistsSource creates a new instance of MockEmailExistsSource. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockEmailExistsSource(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockEmailExistsSource {
	mock := &MockEmailExistsSource{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
